version: '3.8'

services:
  webapp:
    build:
      context: ../../build-config
      dockerfile: Dockerfile
    container_name: webapp
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
    networks:
      - app-network
    volumes:
      - ../../app/dist:/usr/share/nginx/html
    restart: unless-stopped

  nginx:
    build:
      context: ../../build-config
      dockerfile: Dockerfile
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../../build-config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../../app/dist:/usr/share/nginx/html:ro
    depends_on:
      - webapp
    networks:
      - app-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      - POSTGRES_DB=mydb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge